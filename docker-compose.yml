version: '2.1'
volumes:
  nextcloud:
    driver: local
  db:
    driver: local
  backup:
    driver: local
services:
  proxy:
    # You might want to use a proper version
    image: traefik
    command: --configFile=/traefik.toml
    restart: unless-stopped
    # Here's the network we created:
    networks:
      - web
    # The traefik entryPoints
    ports:
      - 80:80
      - 443:443
    labels:
      - traefik.enable=true
      - traefik.frontend.rule=Host:traefik.ibhi.cf
      # Traefik will proxy to its own GUI.
      - traefik.port=8080
      - traefik.docker.network=web
    volumes: 
      - /var/run/docker.sock:/var/run/docker.sock 
      - /tmp/nextcloud-aws/traefik.toml:/traefik.toml 
      - /tmp/nextcloud-aws/acme.json:/acme.json
  nextcloud:
    image: nextcloud:latest
    restart: unless-stopped
    depends_on:
      - db
    environment:
      - NEXTCLOUD_ADMIN_USER=admin
      - NEXTCLOUD_ADMIN_PASSWORD=admin
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
      - MYSQL_PASSWORD=nextcloud
      - MYSQL_HOST=db
      - NEXTCLOUD_DATA_DIR=/var/www/html/data
      - NEXTCLOUD_TRUSTED_DOMAINS=www.ibhi.cf
    networks:
      - web
      - internal
    labels:
      - traefik.enable=true
      - traefik.frontend.rule=Host:www.ibhi.cf
      - traefik.port=80
      - traefik.docker.network=web
    volumes:
      - nextcloud:/var/www/html
  db:
    image: mariadb:latest
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=nextcloud
      - MYSQL_PASSWORD=nextcloud
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
    volumes:
      - db:/var/lib/mysql
      - backup:/var/lib/backup
    networks:
      - internal

networks: 
  web: 
    external: true
  internal: 